{"ast":null,"code":"var _jsxFileName = \"/Users/kunalsingh/Documents/JSSFIshani/DR/Web/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Container, Typography, Button, useMediaQuery, Grid, TextField } from '@mui/material';\nimport axios from 'axios';\nimport '../Styles/Home.css';\nimport ReactPlayer from 'react-player';\nimport { ArcherContainer, ArcherElement } from \"react-archer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n  let {} = _ref;\n  let isLargeScreen = useMediaQuery('(min-width:450px');\n  const [inputs, setInputs] = useState({\n    text: \"\"\n  });\n  const initialOutput = {\n    pred: \"\",\n    pred_list: []\n  };\n  const initialOutputLinks = {\n    links: [{\n      gloss: \"\",\n      link: \"\"\n    }]\n  };\n  const [output, setOutput] = useState(initialOutput);\n  const [outputLinks, setOutputLinks] = useState(initialOutputLinks);\n\n  // Arrow stuff\n  const rootStyle = {\n    display: \"flex\",\n    justifyContent: \"center\"\n  };\n  const rowStyle = {\n    margin: \"200px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  };\n  const boxStyle = {\n    padding: \"10px\",\n    border: \"1px solid black\"\n  };\n  const archer = /*#__PURE__*/React.createRef();\n  const apiCall = async input => {\n    try {\n      //const url = 'http://localhost:8080/translate/text'\n      const url = 'http://localhost:8080/translate/text/ncslgr_use_dict_add_word';\n      const {\n        data\n      } = await axios.post(url, {\n        'sentence': input\n      });\n      setOutputLinks(data);\n      await sleep(100);\n      setOutput(data);\n      console.log(data);\n\n      // box.length = 0;\n\n      // // I initiated days as 0 instead of 31 and if days are less than 31 then\n      // // for loop iterates over it until it reaches that number.\n      // for (let gloss in output.links) {\n      //   // Then the code pushes each time it loops to the empty array I initiated.\n      //   let link = output.links[gloss as keyof typeof output.links];\n      //   box.push(\n      //     <Grid item>\n      //       <ReactPlayer url='https://aslsignbank.haskins.yale.edu/dictionary/protected_media/glossvideo/ASL/GR/GRANDFATHER-1863.mp4'\n      //   type=\"video/mp4\"\n      //   controls //If you want play button or not\n      //   playing //If you want autoplay or not\n      //    />\n      //     </Grid>\n      //   );\n      // }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const transcriptionCall = async blob => {\n    try {\n      let config = {\n        headers: {\n          // TODO: replace TOKEN with secret\n          \"Authorization\": \"Bearer <TOKEN>\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const form = new FormData();\n      form.append('model', 'whisper-1');\n      form.append('file', blob, 'myTrainingFile.webm');\n      const urlTranscribe = 'https://api.openai.com/v1/audio/transcriptions';\n      const {\n        data\n      } = await axios.post(urlTranscribe, form, config);\n      console.log(data);\n      setInputs(data);\n      apiCall(data.text);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleChange = e => {\n    setInputs(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(inputs);\n    apiCall(inputs.text);\n    // if (archer.current) {\n    //   archer.current.refreshScreen()\n    // }\n  };\n\n  const sleep = ms => new Promise(r => setTimeout(r, ms));\n  const addAudioElement = async blob => {\n    // const url = URL.createObjectURL(blob);\n    // const audio = document.createElement(\"audio\");\n    // audio.src = url;\n    // audio.controls = true;\n    // document.body.appendChild(audio);\n    // console.log(url);\n\n    transcriptionCall(blob);\n\n    // var FileSaver = require('file-saver');\n    // FileSaver.saveAs(blob, \"voice.webm\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pt: 4,\n      pb: 6\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: isLargeScreen ? 'h3' : 'h4',\n        children: \"Upload your retina image!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        style: {\n          gap: 5\n        },\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              variant: \"outlined\",\n              color: \"secondary\",\n              value: inputs.text,\n              name: \"text\",\n              onChange: handleChange,\n              focused: true,\n              sx: {\n                \"& .MuiInputBase-root\": {\n                  color: 'primary.main',\n                  width: 400,\n                  mt: 2,\n                  mr: 2,\n                  ml: 4,\n                  mb: 2\n                  //fontSize: 28\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              sx: {\n                mt: 3\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArcherContainer, {\n        strokeColor: \"red\",\n        ref: archer,\n        children: [output.pred_list.map(item => /*#__PURE__*/_jsxDEV(ArcherElement, {\n          id: item,\n          relations: [{\n            targetId: item + \"link\",\n            targetAnchor: \"top\",\n            sourceAnchor: \"bottom\",\n            style: {\n              strokeDasharray: \"5,5\"\n            }\n          }],\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            display: \"inline\",\n            align: \"center\",\n            variant: \"subtitle1\"\n            //variant='h4'\n            ,\n            textTransform: \"capitalize\",\n            sx: {\n              margin: 0.3\n            },\n            paragraph: true,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          wrap: \"nowrap\",\n          style: {\n            gap: 5\n          },\n          children: outputLinks.links.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ArcherElement, {\n              id: item.gloss + \"link\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                display: \"inline\",\n                align: \"center\",\n                variant: \"subtitle1\"\n                //variant='h4'\n                ,\n                textTransform: \"capitalize\",\n                paragraph: true,\n                children: item.gloss\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                className: \"react-player\",\n                url: item.link,\n                type: \"video/mp4\",\n                controls: true //If you want play button or not\n                ,\n                playing: true //If you want autoplay or not\n                ,\n                width: \"100%\",\n                height: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"tt+zEEZFm51unVimSBjHeQHewHo=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Box","Container","Typography","Button","useMediaQuery","Grid","TextField","axios","ReactPlayer","ArcherContainer","ArcherElement","Home","isLargeScreen","inputs","setInputs","text","initialOutput","pred","pred_list","initialOutputLinks","links","gloss","link","output","setOutput","outputLinks","setOutputLinks","rootStyle","display","justifyContent","rowStyle","margin","boxStyle","padding","border","archer","createRef","apiCall","input","url","data","post","sleep","console","log","err","transcriptionCall","blob","config","headers","form","FormData","append","urlTranscribe","handleChange","e","prevState","target","name","value","handleSubmit","preventDefault","ms","Promise","r","setTimeout","addAudioElement","pt","pb","flexDirection","alignItems","textAlign","gap","color","width","mt","mr","ml","mb","map","item","targetId","targetAnchor","sourceAnchor","style","strokeDasharray"],"sources":["/Users/kunalsingh/Documents/JSSFIshani/DR/Web/src/components/Home.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Box,\n  Stack,\n  Container,\n  Typography,\n  Button,\n  Link,\n  Avatar,\n  useMediaQuery,\n  Grid,\n  TextField,\n  Grid2ClassKey,\n} from '@mui/material'\nimport axios from 'axios'\nimport '../Styles/Home.css';\nimport ReactPlayer from 'react-player'\nimport { ArcherContainer, ArcherElement, ArcherContainerRef } from \"react-archer\";\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\n\ninterface props {\n  // pred_text: string\n}\n\n\nexport default function Home({ }: props) {\n  let isLargeScreen = useMediaQuery('(min-width:450px')\n  const [inputs, setInputs] = useState({\n    text: \"\",\n  });\n  const initialOutput = {\n    pred: \"\",\n    pred_list: [\n\n    ],\n  }\n  const initialOutputLinks = {\n    links: [{\n      gloss: \"\",\n      link: \"\",\n    }],\n  }\n  const [output, setOutput] = useState(initialOutput);\n  const [outputLinks, setOutputLinks] = useState(initialOutputLinks);\n\n  // Arrow stuff\n  const rootStyle = { display: \"flex\", justifyContent: \"center\" };\n  const rowStyle = {\n    margin: \"200px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  };\n\n  const boxStyle = { padding: \"10px\", border: \"1px solid black\" };\n\n  const archer = React.createRef<ArcherContainerRef>() \n\n  const apiCall = async (input: string) => {\n    try {\n     //const url = 'http://localhost:8080/translate/text'\n     const url = 'http://localhost:8080/translate/text/ncslgr_use_dict_add_word'\n      const { data } = await axios.post(url, { 'sentence': input })\n      setOutputLinks(data)\n      await sleep(100);\n      setOutput(data)\n      console.log(data)\n\n      // box.length = 0;\n\n      // // I initiated days as 0 instead of 31 and if days are less than 31 then\n      // // for loop iterates over it until it reaches that number.\n      // for (let gloss in output.links) {\n      //   // Then the code pushes each time it loops to the empty array I initiated.\n      //   let link = output.links[gloss as keyof typeof output.links];\n      //   box.push(\n      //     <Grid item>\n      //       <ReactPlayer url='https://aslsignbank.haskins.yale.edu/dictionary/protected_media/glossvideo/ASL/GR/GRANDFATHER-1863.mp4'\n      //   type=\"video/mp4\"\n      //   controls //If you want play button or not\n      //   playing //If you want autoplay or not\n      //    />\n      //     </Grid>\n      //   );\n      // }\n    } catch (err:any) {\n      console.log(err)\n    }\n  }\n\n  const transcriptionCall = async (blob: any) => {\n    try {\n      let config = {\n        headers: {\n          // TODO: replace TOKEN with secret\n          \"Authorization\": \"Bearer <TOKEN>\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }    \n      const form = new FormData();\n      form.append('model', 'whisper-1');\n      form.append('file', blob, 'myTrainingFile.webm');\n      const urlTranscribe = 'https://api.openai.com/v1/audio/transcriptions'\n      const { data } = await axios.post(urlTranscribe, form, config)\n      console.log(data)\n      setInputs(data)\n      apiCall(data.text);\n    } catch (err:any) {\n      console.log(err)\n    }\n  }\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setInputs((prevState) => ({\n      ...prevState,\n      [e.target.name] : e.target.value\n    }))\n  };\n\n  const handleSubmit = (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    console.log(inputs)\n    apiCall(inputs.text)\n    // if (archer.current) {\n    //   archer.current.refreshScreen()\n    // }\n  }\n\n  const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\n  const addAudioElement = async (blob: any) => {\n    // const url = URL.createObjectURL(blob);\n    // const audio = document.createElement(\"audio\");\n    // audio.src = url;\n    // audio.controls = true;\n    // document.body.appendChild(audio);\n    // console.log(url);\n\n    transcriptionCall(blob);\n\n    // var FileSaver = require('file-saver');\n    // FileSaver.saveAs(blob, \"voice.webm\");\n  };\n\n  return (\n    <Box \n    sx={{ pt: 4, pb: 6 }}\n    >\n      <Container\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          textAlign: 'center',\n        }}>\n        {/* <Avatar alt={name} src={img} sx={{ width: 100, height: 100 }} /> */}\n        {/* <Typography\n          variant={isLargeScreen ? 'h1' : 'h2'}\n          textTransform=\"uppercase\">\n          {name}\n        </Typography> */}\n        <Typography variant={isLargeScreen ? 'h3' : 'h4'}>\n          Upload your retina image!\n        </Typography>\n        <Grid container wrap='nowrap' style={{ gap: 5 }}\n  alignItems=\"center\"\n  justifyContent=\"center\">\n        <div>\n          <form onSubmit={handleSubmit} >\n            <TextField id=\"outlined-basic\" variant=\"outlined\" color=\"secondary\"\n                    value={inputs.text} name=\"text\" onChange={handleChange}\n                    focused\n                    sx={{\n                      \"& .MuiInputBase-root\": {\n                          color: 'primary.main',\n                          width: 400,\n                          mt: 2,\n                          mr: 2,\n                          ml: 4,\n                          mb: 2,\n                         //fontSize: 28\n                      }\n                    }}      \n              />\n            <Button type='submit' variant=\"contained\" sx = {{mt: 3}} >Submit</Button>\n          </form>\n        </div>\n        </Grid>\n        <ArcherContainer strokeColor=\"red\" ref={archer}>\n        {\n          output.pred_list.map(item => (\n            <ArcherElement\n              id={item}\n              relations={[\n                {\n                  targetId: item + \"link\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                  style: { strokeDasharray: \"5,5\" },\n                },\n              ]}\n            >\n            <Typography \n              display=\"inline\" \n              align=\"center\" \n              variant=\"subtitle1\" \n              //variant='h4'\n              textTransform=\"capitalize\" \n              sx = {{\n                margin: 0.3\n              }}\n              paragraph>\n              {item}\n            </Typography>\n            </ArcherElement>\n          ))\n        }\n        {/* This div is for making sure successive typography components are next to each other, not on new lines */}\n        {/* <div style={{display:\"flex\"}}>\n        <Typography display=\"inline\" align=\"center\" variant=\"subtitle1\" textTransform=\"capitalize\" paragraph>\n          {output.pred}\n        </Typography>\n        </div> */}\n          {/* <ReactPlayer url='https://aslsignbank.haskins.yale.edu/dictionary/protected_media/glossvideo/ASL/GR/GRANDFATHER-1863.mp4'\n            type=\"video/mp4\"\n            controls //If you want play button or not\n            playing //If you want autoplay or not\n          /> */}\n          <div className=\"mar\"></div>\n          <Grid container wrap='nowrap' style={{ gap: 5 }}>\n            {/* And here I render the box array */}\n            {\n              outputLinks.links.map(item => (\n                <div>\n                  <ArcherElement id={item.gloss + \"link\"}>\n                    <Typography\n                      display=\"inline\"\n                      align=\"center\"\n                      variant=\"subtitle1\"\n                      //variant='h4'\n                      textTransform=\"capitalize\"\n                      paragraph>\n                      {item.gloss}\n                    </Typography>\n                  </ArcherElement>\n                  <div className='player-wrapper'>\n                    <ReactPlayer \n                      className='react-player'\n                      url={item.link}\n                      type=\"video/mp4\"\n                      controls //If you want play button or not\n                      playing //If you want autoplay or not\n                      width='100%'\n                      height='100%'\n                    />\n                  </div>\n                </div>\n              ))\n            }\n          </Grid>\n        </ArcherContainer>\n      </Container>\n      \n      \n      \n      {/* <div style={{ height: \"500px\", margin: \"50px\" }}>\n         <ArcherContainer strokeColor=\"red\">\n            <div style={rootStyle}>\n               <ArcherElement\n                   id=\"root\"\n                   relations={[\n                     {\n                        targetId: \"element2\",\n                        targetAnchor: \"top\",\n                        sourceAnchor: \"bottom\",\n                        style: { strokeDasharray: \"5,5\" },\n                      },\n                  ]}\n                >\n                <div style={boxStyle}>Root</div>\n               </ArcherElement>\n            </div>\n            <div style={rowStyle}>\n               <ArcherElement\n               id=\"element2\"\n               relations={[\n                  {\n                     targetId: \"element3\",\n                     targetAnchor: \"left\",\n                     sourceAnchor: \"right\",\n                     style: { strokeColor: \"blue\", strokeWidth: 1 },\n                     label: <div style={{ marginTop: \"-20px\"}}>Arrow 2</div>,\n                  },\n               ]}\n            >\n            <div style={boxStyle}>Element 2</div>\n                </ArcherElement>\n                <ArcherElement id=\"element3\">\n                   <div style={boxStyle}>Element 3</div>\n               </ArcherElement>\n\n              <ArcherElement\n                 id=\"element4\"\n                 relations={[\n                    {\n                       targetId: \"root\",\n                       targetAnchor: \"right\",\n                       sourceAnchor: \"left\",\n                       label: \"Arrow 3\",\n                   },\n               ]}\n            >\n            <div style={boxStyle}>Element 4</div>\n            </ArcherElement>\n         </div>\n      </ArcherContainer>\n   </div> */}\n    </Box>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}