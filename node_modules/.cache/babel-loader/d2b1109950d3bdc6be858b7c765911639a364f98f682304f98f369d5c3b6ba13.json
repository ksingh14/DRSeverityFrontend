{"ast":null,"code":"var _jsxFileName = \"/Users/kunalsingh/Documents/JSSFIshani/DR/Web/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Container, Typography, Button, useMediaQuery, Grid } from '@mui/material';\nimport axios from 'axios';\nimport '../Styles/Home.css';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { VisuallyHiddenInput } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  input: {\n    display: 'none'\n  }\n};\nexport default function Home(_ref) {\n  _s();\n  let {} = _ref;\n  let isLargeScreen = useMediaQuery('(min-width:450px');\n  const [inputs, setInputs] = useState({\n    text: \"\"\n  });\n  const [retina_file, setFile] = useState(null);\n\n  // Arrow stuff\n  const rootStyle = {\n    display: \"flex\",\n    justifyContent: \"center\"\n  };\n  const rowStyle = {\n    margin: \"200px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  };\n  const boxStyle = {\n    padding: \"10px\",\n    border: \"1px solid black\"\n  };\n  const archer = /*#__PURE__*/React.createRef();\n  const apiCall = async file => {\n    try {\n      //const url = 'http://localhost:8080/translate/text'\n      const url = 'http://localhost:8080/predict';\n      const {\n        data\n      } = await axios.post(url, {\n        'image': file\n      });\n      console.log(data);\n\n      // box.length = 0;\n\n      // // I initiated days as 0 instead of 31 and if days are less than 31 then\n      // // for loop iterates over it until it reaches that number.\n      // for (let gloss in output.links) {\n      //   // Then the code pushes each time it loops to the empty array I initiated.\n      //   let link = output.links[gloss as keyof typeof output.links];\n      //   box.push(\n      //     <Grid item>\n      //       <ReactPlayer url='https://aslsignbank.haskins.yale.edu/dictionary/protected_media/glossvideo/ASL/GR/GRANDFATHER-1863.mp4'\n      //   type=\"video/mp4\"\n      //   controls //If you want play button or not\n      //   playing //If you want autoplay or not\n      //    />\n      //     </Grid>\n      //   );\n      // }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setFile(event.target.files[0]);\n    } else {\n      console.log(\"no files\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"uploaded\");\n    if (retina_file) {\n      const url = 'http://localhost:8080/predict';\n      const {\n        data\n      } = await axios.post(url, {\n        'image': retina_file\n      });\n      console.log(data);\n    }\n    // if (archer.current) {\n    //   archer.current.refreshScreen()\n    // }\n  };\n\n  const sleep = ms => new Promise(r => setTimeout(r, ms));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pt: 4,\n      pb: 6\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: isLargeScreen ? 'h3' : 'h4',\n        children: \"Upload your retina image!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        style: {\n          gap: 5\n        },\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: \"label\",\n              role: undefined,\n              variant: \"contained\",\n              tabIndex: -1,\n              sx: {\n                mt: 3\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 26\n              }, this),\n              children: [\"Upload\", /*#__PURE__*/_jsxDEV(VisuallyHiddenInput, {\n                type: \"file\",\n                onChange: handleFileChange\n                // onChange={(event) => {\n                //   console.log(\"hi\")\n                // }}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"EY2Kyvr4kn0XLAwdcS1CJzy2Nfo=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Box","Container","Typography","Button","useMediaQuery","Grid","axios","CloudUploadIcon","VisuallyHiddenInput","style","input","display","Home","isLargeScreen","inputs","setInputs","text","retina_file","setFile","rootStyle","justifyContent","rowStyle","margin","boxStyle","padding","border","archer","createRef","apiCall","file","url","data","post","console","log","err","handleFileChange","event","target","files","length","handleSubmit","e","preventDefault","sleep","ms","Promise","r","setTimeout","pt","pb","flexDirection","alignItems","textAlign","gap","undefined","mt"],"sources":["/Users/kunalsingh/Documents/JSSFIshani/DR/Web/src/components/Home.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Box,\n  Stack,\n  Container,\n  Typography,\n  Button,\n  Link,\n  Avatar,\n  useMediaQuery,\n  Grid,\n  TextField,\n  Grid2ClassKey\n} from '@mui/material'\nimport axios from 'axios'\nimport '../Styles/Home.css';\nimport ReactPlayer from 'react-player'\nimport { ArcherContainer, ArcherElement, ArcherContainerRef } from \"react-archer\";\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { VisuallyHiddenInput } from '@chakra-ui/react'\n\ninterface props {\n  // pred_text: string\n}\n\nconst style = {\n  input: {\n    display: 'none',\n  },\n}\n\n\nexport default function Home({ }: props) {\n  let isLargeScreen = useMediaQuery('(min-width:450px')\n  const [inputs, setInputs] = useState({\n    text: \"\",\n  });\n\n  const [retina_file, setFile] = useState<File | null>(null);\n\n  // Arrow stuff\n  const rootStyle = { display: \"flex\", justifyContent: \"center\" };\n  const rowStyle = {\n    margin: \"200px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  };\n\n  const boxStyle = { padding: \"10px\", border: \"1px solid black\" };\n\n  const archer = React.createRef<ArcherContainerRef>() \n\n  const apiCall = async (file: string) => {\n    try {\n     //const url = 'http://localhost:8080/translate/text'\n     const url = 'http://localhost:8080/predict'\n      const { data } = await axios.post(url, { 'image': file })\n      console.log(data)\n\n      // box.length = 0;\n\n      // // I initiated days as 0 instead of 31 and if days are less than 31 then\n      // // for loop iterates over it until it reaches that number.\n      // for (let gloss in output.links) {\n      //   // Then the code pushes each time it loops to the empty array I initiated.\n      //   let link = output.links[gloss as keyof typeof output.links];\n      //   box.push(\n      //     <Grid item>\n      //       <ReactPlayer url='https://aslsignbank.haskins.yale.edu/dictionary/protected_media/glossvideo/ASL/GR/GRANDFATHER-1863.mp4'\n      //   type=\"video/mp4\"\n      //   controls //If you want play button or not\n      //   playing //If you want autoplay or not\n      //    />\n      //     </Grid>\n      //   );\n      // }\n    } catch (err:any) {\n      console.log(err)\n    }\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length > 0) {\n      setFile(event.target.files[0]);\n    } else {\n      console.log(\"no files\")\n    }\n  };\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    console.log(\"uploaded\")\n    if (retina_file) {\n      const url = 'http://localhost:8080/predict'\n      const { data } = await axios.post(url, { 'image': retina_file })\n      console.log(data)\n    }\n    // if (archer.current) {\n    //   archer.current.refreshScreen()\n    // }\n  }\n\n  const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\n  return (\n    <Box \n    sx={{ pt: 4, pb: 6 }}\n    >\n      <Container\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          textAlign: 'center',\n        }}>\n        {/* <Avatar alt={name} src={img} sx={{ width: 100, height: 100 }} /> */}\n        {/* <Typography\n          variant={isLargeScreen ? 'h1' : 'h2'}\n          textTransform=\"uppercase\">\n          {name}\n        </Typography> */}\n        <Typography variant={isLargeScreen ? 'h3' : 'h4'}>\n          Upload your retina image!\n        </Typography>\n        <Grid container wrap='nowrap' style={{ gap: 5 }} alignItems=\"center\" justifyContent=\"center\">\n        <div>\n        <form onSubmit={handleSubmit}>\n            {/* <Button type='submit' variant=\"contained\" sx = {{mt: 3}} >Submit</Button> */}\n            <Button\n              component=\"label\"\n              role={undefined}\n              variant=\"contained\"\n              tabIndex={-1}\n              sx = {{mt: 3}}\n              startIcon={<CloudUploadIcon />}\n            >\n              Upload\n              <VisuallyHiddenInput \n                type=\"file\" \n                onChange={handleFileChange} \n                // onChange={(event) => {\n                //   console.log(\"hi\")\n                // }}\n              />\n            </Button>\n          </form>\n        </div>\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}